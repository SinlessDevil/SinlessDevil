name: Update Stats Cache

on:
  schedule:
    - cron: '0 0 * * *'   # каждый день в 00:00 UTC
  workflow_dispatch:

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Add or update cacheBust in README images
        run: |
          python3 - << 'PY'
          import re, time, os

          fn = "README.md"
          rnd = str(int(time.time()))  # можно заменить на любой источник "рандома"

          # домены, для которых добавляем/обновляем cacheBust
          domains = r"(github-readme-stats\.vercel\.app|nirzak-streak-stats\.vercel\.app|github-profile-trophy\.vercel\.app|skillicons\.dev)"

          with open(fn, "r", encoding="utf-8") as f:
            s = f.read()

          def repl_url(u: str) -> str:
            # обновим существующий cacheBust=...
            if re.search(r"([?&])cacheBust=\d+", u):
              return re.sub(r"([?&])cacheBust=\d+", r"\1cacheBust=" + rnd, u)
            # иначе добавим
            sep = "&" if "?" in u else "?"
            return u + f"{sep}cacheBust={rnd}"

          # Markdown-изображения: ![...](URL)
          def replace_markdown(m):
            pre, url, post = m.group(1), m.group(2), m.group(3)
            if re.search(rf"https?://{domains}", url):
              url = repl_url(url)
            return pre + url + post

          s = re.sub(r"(!\[[^\]]*\]\()(https?://[^\s)]+)(\))", replace_markdown, s)

          # HTML-изображения: <img src="URL" ...>
          def replace_html(m):
            pre, url, post = m.group(1), m.group(2), m.group(3)
            if re.search(rf"https?://{domains}", url):
              url = repl_url(url)
            return pre + url + post

          s = re.sub(r'(<img[^>]*\s+src=")(https?://[^"\s]+)(")', replace_html, s)

          with open(fn, "w", encoding="utf-8") as f:
            f.write(s)
          PY

      - name: Commit and push if changed
        run: |
          git add README.md
          if ! git diff --cached --quiet; then
            git commit -m "Auto-update cacheBust for README images"
            git push
          else
            echo "No changes to commit"
          fi
